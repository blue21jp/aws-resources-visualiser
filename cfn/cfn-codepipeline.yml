AWSTemplateFormatVersion: 2010-09-09
Description: codepipeline

Parameters:
  EcsClusterName:
    Type: String
  EcsServiceName:
    Type: String
  FilePrefix:
    Type: String

Mappings:
  !Rain::Include ../rainlib/rain_inc_map_codepipeline.yml

Conditions:
  EnableNotificationCondition: !Equals
    - !FindInMap [ AccountToParams, !Ref AWS::AccountId, EnableNotification]
    - true

Resources:

  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub awsresourcevisualizer-artifacts-${AWS::AccountId}
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldArtifacts
            Status: Enabled
            ExpirationInDays: 30

  SourceBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub awsresourcevisualizer-source-${AWS::AccountId}
      NotificationConfiguration:
        EventBridgeConfiguration:
          EventBridgeEnabled: true
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AWS::StackName
      PipelineType: V2
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: "1"
              Configuration:
                S3Bucket: !Ref SourceBucket
                S3ObjectKey: !Sub ${FilePrefix}.json.zip
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ECS
                Version: "1"
              Region: !Ref AWS::Region
              Configuration:
                ClusterName: !Ref EcsClusterName
                ServiceName: !Ref EcsServiceName
                FileName: !Sub "${FilePrefix}.json"
              InputArtifacts:
                - Name: SourceOutput
              RunOrder: 1
          OnFailure:
            Result: ROLLBACK

  EventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: eb-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipeline}

  EventRule:
    Type: AWS::Events::Rule
    Properties:
      EventBusName: default
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - Object Created
        detail:
          bucket:
            name:
              - !Ref SourceBucket
          object:
            key:
              - prefix: !Ref FilePrefix
      Name: !Sub ${AWS::StackName}-S3SourceRule
      State: ENABLED
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipeline}
          RoleArn: !GetAtt EventRole.Arn
          Id: !Sub codepipeline-${AWS::StackName}

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: CodePipelineServicePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketVersioning
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !GetAtt ArtifactStoreBucket.Arn
                  - !GetAtt SourceBucket.Arn
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !Sub
                    - "${BucketArn}/*"
                    - BucketArn: !GetAtt ArtifactStoreBucket.Arn
                  - !Sub
                    - "${BucketArn}/*"
                    - BucketArn: !GetAtt SourceBucket.Arn
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:UpdateService
                  - ecs:DescribeTaskDefinition
                  - ecs:RegisterTaskDefinition
                Resource: "*"
              - Effect: Allow
                Action:
                  - ecs:TagResource
                Resource: "*"
                Condition:
                  StringEquals:
                    ecs:CreateAction: RegisterTaskDefinition
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
                Condition:
                  StringEquals:
                    iam:PassedToService:
                      - ecs.amazonaws.com
                      - ecs-tasks.amazonaws.com

  PipelineNotificationRule:
    Type: AWS::CodeStarNotifications::NotificationRule
    Condition: EnableNotificationCondition
    Properties:
      Name: !Ref AWS::StackName
      DetailType: FULL
      Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${AWS::StackName}
      EventTypeIds:
        - codepipeline-pipeline-pipeline-execution-superseded
        - codepipeline-pipeline-pipeline-execution-resumed
        - codepipeline-pipeline-pipeline-execution-succeeded
        - codepipeline-pipeline-pipeline-execution-failed
        - codepipeline-pipeline-pipeline-execution-canceled
      Targets:
        - TargetType: AWSChatbotSlack
          TargetAddress:
            Fn::Join:
              - "/"
              - - !Sub arn:aws:chatbot::${AWS::AccountId}:chat-configuration
                - slack-channel
                - !FindInMap [ AccountToParams, !Ref AWS::AccountId, ChatBotName]
